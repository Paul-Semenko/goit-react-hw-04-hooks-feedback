{"version":3,"sources":["components/FeedbackOptions/FeedbackOptions.jsx","components/Section/Section.jsx","components/Notification/Notification.jsx","components/Stats/Stats.jsx","App.jsx","index.js"],"names":["FeedbackOptions","good","neutral","bad","onClick","Section","title","children","Notification","message","Statistics","total","positivePercentage","App","useState","setGood","setNeutral","setBad","countTotalFeedback","prevState","Math","round","ReactDOM","render","StrictMode","document","getElementById","querySelector"],"mappings":"kNAGe,SAASA,EAAT,GAAgD,IAArBC,EAAoB,EAApBA,KAAMC,EAAc,EAAdA,QAASC,EAAK,EAALA,IAEjD,OACI,qCACI,wBAAQC,QAASH,EAAjB,kBACA,wBAAQG,QAASF,EAAjB,qBACA,wBAAQE,QAASD,EAAjB,oBCNhB,IAeeE,EAfC,SAAC,GAAyB,IAAvBC,EAAsB,EAAtBA,MAAOC,EAAe,EAAfA,SACtB,OACI,oCACI,6BAAKD,IACJC,MCIEC,MARf,YAAmC,IAAXC,EAAU,EAAVA,QACpB,OAAO,4BAAIA,KCAA,SAASC,EAAT,GAA6E,IAAxDT,EAAuD,EAAvDA,KAAMC,EAAiD,EAAjDA,QAASC,EAAwC,EAAxCA,IAAKQ,EAAmC,EAAnCA,MAAOC,EAA4B,EAA5BA,mBAAoBN,EAAQ,EAARA,MAE3E,OACI,qCACI,6BAAKA,IACJK,EAAS,+BACN,wCAAWV,KACX,2CAAcC,KACd,uCAAUC,KACV,wCAAWQ,KACX,oDAAuB,IAClBC,GAC0B,EAF/B,UAIM,cAAC,EAAD,CAAcH,QAAQ,yBCZjC,SAASI,IACtB,MAAwBC,mBAAS,GAAjC,mBAAOb,EAAP,KAAac,EAAb,KACA,EAA8BD,mBAAS,GAAvC,mBAAOZ,EAAP,KAAgBc,EAAhB,KACA,EAAsBF,mBAAS,GAA/B,mBAAOX,EAAP,KAAYc,EAAZ,KAgBMC,EAAqBjB,EAAOC,EAAUC,EAE1C,OAAQ,eAAC,EAAD,CAASG,MAAO,wBAAhB,UACN,cAACN,EAAD,CACEC,KAlBmB,WAEvBc,GAAQ,SAAAI,GAAS,OAAIA,EAAY,MAiB7BjB,QAdsB,WAE1Bc,GAAW,SAAAG,GAAS,OAAIA,EAAY,MAahChB,IAXkB,WAEtBc,GAAO,SAAAE,GAAS,OAAIA,EAAY,QAY9B,cAACT,EAAD,CAAYJ,MAAO,aACjBL,KAAMA,EACNC,QAASA,EACTC,IAAKA,EACLQ,MAAOO,EACPN,mBAAoBQ,KAAKC,MAAOpB,EAAOiB,EAAsB,UCnCrEI,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAACX,EAAD,MAEFY,SAASC,eAAe,SAG1BJ,IAASC,OAAO,cAACV,EAAD,IAASY,SAASE,cAAc,Y","file":"static/js/main.cc5179ea.chunk.js","sourcesContent":["import React from \"react\";\r\nimport PropTypes from 'prop-types';\r\n\r\nexport default function FeedbackOptions ({good, neutral, bad}){\r\n    \r\n        return (\r\n            <>\r\n                <button onClick={good}>Good</button>\r\n                <button onClick={neutral}>Neutral</button>\r\n                <button onClick={bad}>Bad</button>\r\n            </>\r\n        );\r\n    }\r\n\r\n\r\nFeedbackOptions.propTypes = {\r\n    good: PropTypes.func,\r\n    neutral: PropTypes.func,\r\n    bad:PropTypes.func,\r\n}","\r\nimport PropTypes from 'prop-types';\r\n\r\nconst Section = ({ title, children }) => {\r\n    return (\r\n        <section>\r\n            <h2>{title}</h2>\r\n            {children}\r\n        </section>\r\n    );\r\n}\r\n\r\n\r\nSection.propTypes = {\r\n    title: PropTypes.string,\r\n    children: PropTypes.node,\r\n}\r\n\r\nexport default Section;","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nfunction  Notification({message}) {\r\n    return <p>{message}</p>;\r\n}\r\n\r\nNotification.propTypes = {\r\n    message: PropTypes.string,\r\n}\r\n\r\nexport default Notification;","import React from \"react\";\r\nimport PropTypes from 'prop-types';\r\nimport Notification from '../Notification/Notification';\r\n\r\nexport default function Statistics({good, neutral, bad, total, positivePercentage, title}) {\r\n    \r\n        return (\r\n            <>\r\n                <h2>{title}</h2>\r\n                {total ? (<ul>\r\n                    <li>Good: {good}</li>\r\n                    <li>Neutral: {neutral}</li>\r\n                    <li>Bad: {bad}</li>\r\n                    <li>Total:{total}</li>\r\n                    <li>Positive feedback:{' '}\r\n                        {positivePercentage\r\n                            ? positivePercentage : 0}%\r\n                    </li>\r\n                </ul>) : (<Notification message=\"No feedback given\" />)}\r\n            </>\r\n    \r\n        );\r\n}\r\n\r\n\r\nStatistics.propTypes = {\r\n    good: PropTypes.number,\r\n    neutral: PropTypes.number,\r\n    bad: PropTypes.number,\r\n    total: PropTypes.number,\r\n    positivePercentage: PropTypes.number,\r\n}","import React, {useState} from \"react\";\nimport FeedbackOptions from \"./components/FeedbackOptions/FeedbackOptions\";\nimport Section from \"./components/Section/Section\";\nimport Statistics from './components/Stats/Stats';\n\n\nexport default function App() {\n  const [good, setGood] = useState(0);\n  const [neutral, setNeutral] = useState(0);\n  const [bad, setBad] = useState(0);\n\n  const handleGoodButton = () => {\n    \n    setGood(prevState => prevState + 1);\n  };\n\n  const handleNeutralButton = () => {\n    \n    setNeutral(prevState => prevState + 1);\n  };\n  const handleBadButton = () => {\n    \n    setBad(prevState => prevState + 1);\n  };\n\n  const countTotalFeedback = good + neutral + bad;\n  \n    return (<Section title={'Please leave feedback'}>\n      <FeedbackOptions\n        good={handleGoodButton}\n        neutral={handleNeutralButton}\n        bad={handleBadButton}\n      />\n      \n      <Statistics title={'Statistics'}\n        good={good}\n        neutral={neutral}\n        bad={bad}\n        total={countTotalFeedback}\n        positivePercentage={Math.round((good / countTotalFeedback) * 100)}\n      />\n    \n    </Section>\n    );\n\n}\n\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\nReactDOM.render(<App />, document.querySelector(\"#root\"));\n\n"],"sourceRoot":""}